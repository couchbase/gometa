// @author Couchbase <info@couchbase.com>
// @copyright 2014 NorthScale, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package message;

message Proposal {
    required uint32          version   = 1; // protocol version TBD
    required uint64          txnid     = 2;
    required string          fid       = 3;
    required uint64          reqId     = 4;
    required uint32          opCode    = 5;
    required string          key       = 6;
    required bytes           content   = 7;
}

message Accept {
    required uint32          version   = 1; // protocol version TBD
    required uint64          txnid     = 2;
    required string          fid       = 3;
}

message Commit {
    required uint32          version   = 1; // protocol version TBD
    required uint64          txnid     = 2;
}

message Vote {
    required uint32          version            = 1; // protocol version TBD
    required uint64          round              = 2; // round
    required uint32          status             = 3; // status - ELECTING,LEADING,FOLLOWING
    required uint32          epoch              = 4; // epoch (leader term)
    required string          cndId              = 5; // proposed candidate Id
    required uint64          cndLoggedTxnId     = 6; // proposed candidate last logged TxnId
    required uint64          cndCommittedTxnId  = 7; // proposed candidate last committed TxnId
    required bool            solicit            = 8; // is the vote coming from a participant who is just watching?
}

message FollowerInfo {
    required uint32          version        = 1; // protocol version TBD
    required uint32          acceptedEpoch  = 2;
    required string          fid            = 3;
    required bool            voting         = 4;
}

message EpochAck {
    required uint32          version        = 1; // protocol version TBD
    required uint64          lastLoggedTxid = 2;
    required uint32          currentEpoch   = 3;
}

message LeaderInfo {
    required uint32          version        = 1; // protocol version TBD
    required uint32          acceptedEpoch  = 2;
}

message NewLeader {
    required uint32          version        = 1; // protocol version TBD
    required uint32          currentEpoch   = 2;
}

message NewLeaderAck {
    required uint32          version   = 1; // protocol version TBD
}

message LogEntry {
    required uint32          version   = 1; // protocol version TBD
    required uint64          txnid     = 2;
    required uint32          opCode    = 3;
    required string          key       = 4;
    required bytes           content   = 5;
}

message Request {
    required uint32          version   = 1; // protocol version TBD
    required uint64          reqId     = 2;
    required uint32          opCode    = 3;
    required string          key       = 4;
    required bytes           content   = 5;
}
